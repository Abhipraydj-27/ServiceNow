<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_properties</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sys_properties">nameLIKEx_1125801_servicen.visibility_education^ORsuffixLIKEvisibility_education^EQ<item endquery="false" field="name" goto="false" newquery="false" operator="LIKE" or="false" value="x_1125801_servicen.visibility_education"/>
            <item endquery="false" field="suffix" goto="false" newquery="false" operator="LIKE" or="true" value="visibility_education"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Portfolio Education Visibility</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
    // Querying sp_widget records with id 'education'
    var gr = new GlideRecord('sp_widget');
    gr.addQuery('id', 'education');
    gr.query();

    while (gr.next()) {
        // Logging widget and property values
        gs.info("Widget public: " + gr.public);
        gs.info("Property value: " + current.value);

       if (current.value) {
            gr.public = true;
        } else{
            gr.public = false;
            gs.info("Setting public to false");
        }
        // No need to check for current.value == true && gr.public == true
        // as it's redundant with the first condition

        // Updating the record
        gr.update();
    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-05-23 10:08:29</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6e22c61e939a021016d7fa497bba105a</sys_id>
        <sys_mod_count>34</sys_mod_count>
        <sys_name>Portfolio Education Visibility</sys_name>
        <sys_overrides/>
        <sys_package display_value="Servicenow Portfolio" source="x_1125801_servicen">bb95605493110210dd973aaefaba10ef</sys_package>
        <sys_policy/>
        <sys_scope display_value="Servicenow Portfolio">bb95605493110210dd973aaefaba10ef</sys_scope>
        <sys_update_name>sys_script_6e22c61e939a021016d7fa497bba105a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-05-23 12:53:32</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=6e22c61e939a021016d7fa497bba105a"/>
</record_update>
